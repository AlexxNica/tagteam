.grid_8.alpha
  %h2 This form does not work correctly right now. Add items by using the controls throughout the hub.
  = semantic_form_for(@input_source) do |f|
    = f.inputs do
      = f.input :republished_feed_id, :as => :hidden
      %li#ajax_item_source_container.string.optional
        %label{:for => "ajax_item_source"}
          Source
          %span#spinner
        %input#ajax_item_source{:name => "ajax_item_source", :type => "text"}/
        %p.inline-hints Start typing to find the Feed, Item, or Tag you'd like to be the input source.
        %p.inline-hints
          %span.ui-silk.inline.ui-silk-delete
          - if @input_source.new_record?
            style="display: none;"
          id="item_source_remove"&gt;
        %span#ajax_item_source_selection
          - unless @input_source.new_record?
            = sanitize @input_source.item_source.mini_icon
            = link_to(raw(strip_tags(@input_source.item_source.to_s)), @input_source)
      = f.input :search_in, as: :radio, collection: [%w(Feeds Feed), %w(Items FeedItem), ['Tags', 'ActsAsTaggableOn::Tag']]
      = f.input :item_source_id, as: :hidden
      = f.input :item_source_type, as: :hidden
      = f.input :effect, collection: InputSource::EFFECTS, hint: 'Add means this input source adds its items to this republished feed. Remove means this input source is used to remove items it matches.'
      = f.input :limit, hint: 'How many maximum items to pull from this source?'
    = f.actions do
      = f.action :submit, as: :button, button_html: { class: 'btn btn-primary' }

.grid_8.omega
  #ajax_item_source_results
.clear
:javascript
  $().ready(function(){
    var observeItemSource = function(){
    var search_in = [];
    $('input[name*="search_in"]').filter(':checked').each(function(){search_in.push($(this).val())});
     $.ajax({
      cache: false,
      type: 'GET',
      url: $.rootPath() + 'input_sources/find',
      data: {
        q: $('#ajax_item_source').val(),
        republished_feed_id: $('#input_source_republished_feed_id').val(),
        search_in: search_in
      },
      beforeSend: function(){
        $.showSpinner('#spinner');
      },
      success: function(html){
        $('#ajax_item_source_results').html(html);
      },
      complete: function(){
        $.hideSpinner('#spinner');
      }
     });
    };
    $('#ajax_item_source').observe_field(1, observeItemSource);
    $('input[name*="search_in"]').change(observeItemSource);
    $('#item_source_remove').bind({
      mouseover: function(){
        $(this).css('cursor', 'pointer');
      },
      click: function(){
        $('#input_source_item_source_type').val('');
        $('#input_source_item_source_id').val('');
        $('#ajax_item_source_selection').html('');
        $('#item_source_remove').hide();
      }
    });
    $('.add_item_source').live({
      mouseover: function(){
        $(this).css('cursor', 'pointer');
      },
      click: function(){
        console.log('EL: ' + $(this).attr('id'));
        var itemSource = $(this).attr('id').split('-');
        $('#input_source_item_source_type').val(itemSource[0]);
        $('#input_source_item_source_id').val(itemSource[1]);
        $('#ajax_item_source_selection').html($('#' + $(this).attr('id') + '-link').clone());
        $('#item_source_remove').show();
      }
    });
  });
